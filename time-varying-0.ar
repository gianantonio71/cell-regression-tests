reactive time_varying_0
{
  input:
    i : Ta;

  output:
    i  : Ta;
    o  : Bool;
    d  : <hello, bye>;
    o2 : Bool;
    c  : Nat;

  state:
    c : Nat = 0;

  rules:
    o = i == :a1 for 2ns;
    d = if o then :hello else :bye;
    o2 = i == :a3 for (2ns and not 5ns) or (10ns and not 12ns);
    c = c + 1 if o2;
}


(Maybe[Ta], Nat, Bool, <hello, bye>, Bool, Nat)* time_varying_0_test_data_0 = (
  (:just(:a0),    0,    false,      :bye,     false,    0),
  (nil,           1,    false,      :bye,     false,    0),
  (nil,           1,    false,      :bye,     false,    0),
  (nil,           1,    false,      :bye,     false,    0),
  (nil,          10,    false,      :bye,     false,    0),
  (:just(:a1),    1,    false,      :bye,     false,    0),
  (nil,           1,    false,      :bye,     false,    0),
  (nil,           1,    true,       :hello,   false,    0),
  (nil,          10,    true,       :hello,   false,    0),
  (:just(:a2),    0,    false,      :bye,     false,    0),
  (nil,          10,    false,      :bye,     false,    0),
  (:just(:a3),   20,    false,      :bye,     false,    0),
  (nil,           1,    false,      :bye,     false,    0),
  (nil,           1,    false,      :bye,     true,     1),
  (nil,           1,    false,      :bye,     true,     1),
  (nil,           1,    false,      :bye,     true,     1),
  (nil,           1,    false,      :bye,     false,    1),
  (nil,           1,    false,      :bye,     false,    1),
  (nil,           1,    false,      :bye,     false,    1),
  (nil,           1,    false,      :bye,     false,    1),
  (nil,           1,    false,      :bye,     false,    1),
  (nil,           1,    false,      :bye,     true,     2),
  (nil,           1,    false,      :bye,     true,     2),
  (nil,           1,    false,      :bye,     false,    2),
  (:just(:a4),  100,    false,      :bye,     false,    2)
);


(Maybe[Ta], Nat, Bool, <hello, bye>, Bool, Nat)* time_varying_0_test_data_1 = (
  (:just(:a3),    0,    false,      :bye,     false,    0),
  (nil,          12,    false,      :bye,     false,    2),
  (nil,         100,    false,      :bye,     false,    2)
);


Bool RunTimeVaryingTest0((Maybe[Ta], Nat, Bool, <hello, bye>, Bool, Nat)* test_data)
{
  auto tm : time_varying_0;

  for mi, dt, eo, ed, eo2, ec @ j <- test_data:
    if mi != nil:
      auto tm.i = match (mi) just(i?) = i;
    ;

    auto elapsed tm dt;
    loop
      auto apply tm done;
    while not done;

    if tm.o != eo or tm.d != ed or tm.o2 != eo2 or tm.c != ec:
      Print("Error\n");
      print (mi, dt, eo, ed, eo2, ec, j);
      print tm.i;
      print tm.o;
      print tm.d;
      print tm.o2;
      print tm.c;
      return false;
    // else
      // Print("OK\n");
    ;
  ;

  return true;
}


Bool RunAllTimeVaryingTests0()
{
  ok = RunTimeVaryingTest0(time_varying_0_test_data_0);
  return false if not ok;
  ok = RunTimeVaryingTest0(time_varying_0_test_data_1);
  return ok;
}
