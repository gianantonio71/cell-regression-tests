reactive full_history
{
  input:
    input : Ta;

  output:
    history : Ta+;

  state:
    history : Ta+ = (input);

  rules:
    history = (history | input) : input;
}


reactive full_history_client
{
  input:
    i : Ta;

  output:
    h  : Ta+;
    hs : Nat;

  rules:
    ha = full_history(input = i);
    h = ha.history;

    hs = _len_(h);
}


Ta* full_history_test_data = (:a0, :a1, :a2, :a3, :a4, :a0, :a1, :a2, :a3, :a4);


Bool RunAllFullHistoryTests()
{
  auto fhc : full_history_client;

  eh = ();
  ehs = 0;

  for i <- full_history_test_data:
    eh = (eh | i);
    ehs = _add_(ehs, 1);
    auto fhc.i = i;
    auto apply fhc done;
    assert done;
    if fhc.h != eh or fhc.hs != ehs:
      Print("ERROR!\n");
      print fhc.h;
      print fhc.hs;
      print (eh, ehs);
      return false;
    // else
    //   Print("OK\n");
    ;
  ;

  return true;
}
