reactive state_derived_copy
{
  input:
    i1 : Ta;
    i2 : Tb;

  output:
    o : (Ta, Tb);

  state:
    v : (Ta, Tb) = (i1, i2);

  rules:
    o = v;
}


(Ta, Tb)* state_derived_copy_test_data = (
  (:a0, :b0),
  (:a1, :b1),
  (:a2, :b2),
  (:a3, :b3),
  (:a4, :b4)
);


Bool RunAllStateDerivedCopyTests()
{
  auto c : state_derived_copy;

  for i1, i2 <- state_derived_copy_test_data:
    auto c.i1 = i1;
    auto c.i2 = i2;
    auto apply c done;
    assert done;
    if c.o != (:a0, :b0):
      Print("Error\n");
      print c.o;
      return false;
    // else
    //   Print("OK\n");
    ;
  ;

  return true;
}
