auto time_varying_2
{
  input Ta i;

  state Nat c1 = 0, Nat c2 = 0, Nat c3 = 0, Nat c4 = 0;

  output Bool o1, Nat c1, Bool o2, Nat c2, Bool o3, Nat c3, Bool o4, Nat c4;

  o1 = i == :a1 for not 2ns every 5ns;
  o2 = i == :a2 for not 3ns or 6ns every 10ns;
  o3 = i == :a3 for not 1ns or (5ns and not 8ns) every 12ns;
  o4 = i == :a4 for not 3ns or (4ns and not 7ns) or 10ns every 15ns;

  c1 = _add_(c1, 1) if o1;
  c2 = _add_(c2, 1) if o2;
  c3 = _add_(c3, 1) if o3;
  c4 = _add_(c4, 1) if o4;
}


(Maybe[Ta], Nat, Bool, Nat, Bool, Nat, Bool, Nat, Bool, Nat)* time_varying_2_test_data_0 = (
  (:just(:a0),    0,    false,    0,    false,    0,    false,    0,    false,    0),
  (nil,          10,    false,    0,    false,    0,    false,    0,    false,    0),

  (:just(:a1),    0,    true,     1,    false,    0,    false,    0,    false,    0),
  (nil,           1,    true,     1,    false,    0,    false,    0,    false,    0),
  (nil,           1,    false,    1,    false,    0,    false,    0,    false,    0),
  (nil,           1,    false,    1,    false,    0,    false,    0,    false,    0),
  (nil,           1,    false,    1,    false,    0,    false,    0,    false,    0),
  (nil,           1,    true,     2,    false,    0,    false,    0,    false,    0),
  (nil,           1,    true,     2,    false,    0,    false,    0,    false,    0),

  (:just(:a2),    1,    false,    2,    true,     1,    false,    0,    false,    0),
  (nil,           1,    false,    2,    true,     1,    false,    0,    false,    0),
  (nil,           1,    false,    2,    true,     1,    false,    0,    false,    0),
  (nil,           1,    false,    2,    false,    1,    false,    0,    false,    0),
  (nil,           1,    false,    2,    false,    1,    false,    0,    false,    0),
  (nil,           1,    false,    2,    false,    1,    false,    0,    false,    0),
  (nil,           1,    false,    2,    true,     2,    false,    0,    false,    0),
  (nil,           1,    false,    2,    true,     2,    false,    0,    false,    0),
  (nil,           1,    false,    2,    true,     2,    false,    0,    false,    0),
  (nil,           1,    false,    2,    true,     2,    false,    0,    false,    0),
  (nil,           1,    false,    2,    true,     2,    false,    0,    false,    0),
  (nil,           1,    false,    2,    true,     2,    false,    0,    false,    0),
  (nil,           1,    false,    2,    true,     2,    false,    0,    false,    0),
  (nil,           1,    false,    2,    false,    2,    false,    0,    false,    0),

  (:just(:a3),    1,    false,    2,    false,    2,    true,     1,    false,    0),
  (:just(:a3),    1,    false,    2,    false,    2,    false,    1,    false,    0),
  (:just(:a3),    1,    false,    2,    false,    2,    false,    1,    false,    0),
  (:just(:a3),    1,    false,    2,    false,    2,    false,    1,    false,    0),
  (:just(:a3),    1,    false,    2,    false,    2,    false,    1,    false,    0),
  (:just(:a3),    1,    false,    2,    false,    2,    true,     2,    false,    0),
  (:just(:a3),    1,    false,    2,    false,    2,    true,     2,    false,    0),
  (:just(:a3),    1,    false,    2,    false,    2,    true,     2,    false,    0),
  (:just(:a3),    1,    false,    2,    false,    2,    false,    2,    false,    0),
  (:just(:a3),    1,    false,    2,    false,    2,    false,    2,    false,    0),
  (:just(:a3),    1,    false,    2,    false,    2,    false,    2,    false,    0),
  (:just(:a3),    1,    false,    2,    false,    2,    false,    2,    false,    0),
  (:just(:a3),    1,    false,    2,    false,    2,    true,     3,    false,    0),
  (:just(:a3),    1,    false,    2,    false,    2,    false,    3,    false,    0),

  (:just(:a4),    1,    false,    2,    false,    2,    false,    3,    true,     1),
  (nil,           1,    false,    2,    false,    2,    false,    3,    true,     1),
  (nil,           1,    false,    2,    false,    2,    false,    3,    true,     1),
  (nil,           1,    false,    2,    false,    2,    false,    3,    false,    1),
  (nil,           1,    false,    2,    false,    2,    false,    3,    true,     2),
  (nil,           1,    false,    2,    false,    2,    false,    3,    true,     2),
  (nil,           1,    false,    2,    false,    2,    false,    3,    true,     2),
  (nil,           1,    false,    2,    false,    2,    false,    3,    false,    2),
  (nil,           1,    false,    2,    false,    2,    false,    3,    false,    2),
  (nil,           1,    false,    2,    false,    2,    false,    3,    false,    2),
  (nil,           1,    false,    2,    false,    2,    false,    3,    true,     3),
  (nil,           7,    false,    2,    false,    2,    false,    3,    true,     3),
  (nil,           1,    false,    2,    false,    2,    false,    3,    false,    3)
);


(Maybe[Ta], Nat, Bool, Nat, Bool, Nat, Bool, Nat, Bool, Nat)* time_varying_2_test_data_1 = (
  (:just(:a4),    0,    false,    0,    false,    0,    false,    0,    true,     0),
  (:just(:a3),   40,    false,    0,    false,    0,    true,     1,    false,    5),
  (:just(:a2),   30,    false,    0,    true,     1,    false,    6,    false,    5),
  (:just(:a1),   50,    true,     1,    false,    6,    false,    6,    false,    5),
  (:just(:a0),   70,    false,   14,    false,    6,    false,    6,    false,    5)
);


Bool RunTimeVaryingTest2((Maybe[Ta], Nat, Bool, Nat, Bool, Nat, Bool, Nat, Bool, Nat)* test_data)
{
  auto time_varying_2 a;

  for mi, dt, eo1, ec1, eo2, ec2, eo3, ec3, eo4, ec4 @ j <- test_data:
    if mi != nil:
      a.i = match (mi) just(i?) = i;
    ;

    update a elapsed dt;

    if  a.o1 != eo1 or a.c1 != ec1 or
         a.o2 != eo2 or a.c2 != ec2 or
         a.o3 != eo3 or a.c3 != ec3 or
         a.o4 != eo4 or a.c4 != ec4:
      Print("Error\n");
      print (mi, dt, eo1, ec1, eo2, ec2, eo3, ec3, eo4, ec4);
      print a;
      print j;
      return false;
    // else
    //   Print("OK\n");
    ;
  ;

  return true;
}


Bool RunAllTimeVaryingTests2()
{
  ok = RunTimeVaryingTest2(time_varying_2_test_data_0);
  return false if not ok;
  ok = RunTimeVaryingTest2(time_varying_2_test_data_1);
  return ok;
}